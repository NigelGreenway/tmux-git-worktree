#!/usr/bin/env bash

is_root_of_repo=0
ignore_list=$(tmux show -gv @git-worktree-ignore-worktrees)

if [[ -z "$TMUX" ]]; then
  echo "Error: Not running inside tmux"
  read -n 1 -s -r -p "Press any key to close..."
  exit 1
fi

if ! git rev-parse --git-dir &>/dev/null; then
  echo "Error: Not a git repository"
  read -n 1 -s -r -p "Press any key to close..."
  exit 1
fi

if command -v fzf &> /dev/null; then
  directory=$(git worktree list | grep  -v -E "($ignore_list)" | awk '{print $1}' | xargs -n1 basename | fzf --print-query --prompt="Select or create worktree: " | tail -1)
  existing_worktree=$(git worktree list | awk -v dir="$directory" '$1 ~ "/"dir"$" {print; exit}')

  if [[ -n "$existing_worktree" ]]; then
    directory=$(echo "$existing_worktree" | awk '{ print $1 }' | xargs -n1 basename)
  else
    branch=$(git branch -a | sed 's/^[* ] //' | sed 's/remotes\///' | fzf --print-query --prompt="Select or type branch: " | tail -1)

    if [[ -z "$branch" ]]; then
      echo "Error: Branch name cannot be empty"
      read -n 1 -s -r -p "Press any key to close..."
      exit 1
    fi
  fi
else
  read -p "Enter worktree name: " directory
  directory=${directory}

  read -p "Enter branch name: " branch
  branch=${branch}
fi

# Exit if user cancelled (Ctrl+C or Esc)
[[ -z "$directory" ]] && exit 0

###
# Sanitize variables
# ###

# Remove trailing spaces and replace all spaces with a '-' to enable quicker directory naming
directory=$(echo $directory | sed 's/[[:space:]]*$//' | tr ' ' '-')

# Strip the remote prefix (e.g., origin/, upstream/) and replace all spaces with hyphens
branch=$(echo "$branch" | sed 's/^[^\/]*\///' | sed 's/[[:space:]]*$//' | sed 's/ /-/g')

if git rev-parse --is-bare-repository 2> /dev/null | grep -q "true"; then
  is_root_of_repo=1
fi

if [[ "$is_root_of_repo" -eq 0 ]]; then
  directory="../$directory"
fi

if [[ -d "$directory" ]]; then
  abs_directory=$(cd "$directory" && pwd)
  if ! tmux new-window -c "$abs_directory" -n "$directory"; then
    echo "Error: Failed to create tmux window"
    read -n 1 -s -r -p "Press any key to close..."
    exit 1
  fi
  exit 0
fi

if git rev-parse --quiet --verify "$branch" 2> /dev/null; then
  if ! git worktree add "$directory" "$branch"; then
    echo "Error: Failed to create worktree"
    read -n 1 -s -r -p "Press any key to close..."
    exit 1
  fi
else
  if ! git worktree add "$directory" -b "$branch"; then
    echo "Error: Failed to create worktree with new branch"
    read -n 1 -s -r -p "Press any key to close..."
    exit 1
  fi
fi

abs_directory=$(cd "$directory" && pwd)
if ! tmux new-window -c "$abs_directory" -n "$directory"; then
  echo "Error: Failed to create tmux window"
  read -n 1 -s -r -p "Press any key to close..."
  exit 1
fi
